module.exports.config = {
    name: "pending",
    version: "1.0.6",
    credits: "CatalizCS mod by Kadeer",
    hasPermssion: 2,
    description: "Qu·∫£n l√Ω tin nh·∫Øn ch·ªù c·ªßa bot",
    commandCategory: "H·ªá th·ªëng admin-bot",
    cooldowns: 5
};

module.exports.handleReply = async function({ api, event, handleReply, getText }) {
    if (String(event.senderID) !== String(handleReply.author)) return;
    const { body, threadID, messageID } = event;
    var count = 0;

    if (isNaN(body) && body.indexOf("c") == 0 || body.indexOf("cancel") == 0) {
        const index = (body.slice(1, body.length)).split(/\s+/);
        for (const singleIndex of index) {
        	api.removeUserFromGroup(api.getCurrentUserID(), handleReply.pending[singleIndex - 1].threadID);
            if (isNaN(singleIndex) || singleIndex <= 0 || singleIndex > handleReply.pending.length) return api.sendMessage(`${singleIndex} Kh√¥ng ph·∫£i l√† m·ªôt con s·ªë h·ª£p l·ªá`, threadID, messageID);
        }
        return api.sendMessage(`ƒê√£ t·ª´ ch·ªëi th√†nh c√¥ng!`, threadID, messageID);
    }
    else {

        const index = body.split(/\s+/);
        const fs = require("fs");       
        for (const singleIndex of index) {
            if (isNaN(singleIndex) || singleIndex <= 0 || singleIndex > handleReply.pending.length) return api.sendMessage(`${singleIndex} Kh√¥ng ph·∫£i l√† m·ªôt con s·ªë h·ª£p l·ªá`, threadID, messageID);
            api.unsendMessage(handleReply.messageID);
            api.changeNickname(`[ ${global.config.PREFIX} ] ‚Ä¢ ${(!global.config.BOTNAME) ? "Made by Kadeer" : global.config.BOTNAME}`, handleReply.pending[singleIndex - 1].threadID, api.getCurrentUserID());
            api.sendMessage("", event.threadID, () => api.sendMessage({body:`„Äã ùêíùêÆùêúùêúùêûùê¨ùê¨ùêüùêÆùê•ùê•ùê≤ ùêÇùê®ùêßùêßùêûùêúùê≠ùêûùêù „Ää\nùë©ùíêùíï ùíäùíî ùíêùíëùíÜùíìùíÇùíïùíäùíèùíà ùíÉùíö ùë≤ùíÇùíÖùíÜùíÜùíì\nùêÇùê®ùêßùê≠ùêöùêúùê≠: https://www.facebook.com/BrokenCandy05 or ùíÅùíÇùíçùíê: 0976890935, ùë™ùíâùíñÃÅùíÑ ùíÑùíÇÃÅùíÑ ùíÉùíÇÃ£ùíè ùíïùíìùíÇÃâùíä ùíèùíàùíâùíäùíÜÃ£ÃÇùíé ùíÉùíêùíï ùíóùíñùíä ùíóùíÜÃâ ùíóùíÇÃÄ ùíåùíâùíêÃÇùíèùíà ùíîùíëùíÇùíé, ùíëùíâùíÇÃÅ ùíÉùíêùíï ùíÖùíñÃõùíêÃõÃÅùíä ùíéùíêÃ£ùíä ùíâùíäÃÄùíèùíâ ùíïùíâùíñÃõÃÅùíÑ\n ùë¥ùë®ÃÉùë∞ ùë∞ùëº ùëºùëæùëºüêß‚ù§`, attachment: fs.createReadStream(__dirname + "/cache/pending/pending.mp4")} ,handleReply.pending[singleIndex - 1].threadID));
            count+=1;
            
        }
        return api.sendMessage(`ƒê√£ ph√™ duy·ªát th√†nh c√¥ng!`, threadID, messageID);
    }
}

module.exports.run = async function({ api, event, args, permission, handleReply }) {
        if (args.join() == "") {api.sendMessage("B·∫°n c√≥ th·ªÉ d√πng pending\nUser: H√†ng ch·ªù ng∆∞·ªùi d√πng\nThread: H√†ng ch·ªù nh√≥m\nAll:T·∫•t c·∫£ h√†ng ch·ªù ",event.threadID, event.messageID);
    }
        const content = args.slice(1, args.length);   
     switch (args[0]) {
    case "user":
    case "u":
    case "-u":
    case "User": {
    const permission = ["100006622276498"];
    if (!permission.includes(event.senderID)) return api.sendMessage("Quy·ªÅn l·ªìn bi√™n gi·ªõi?", event.threadID, event.messageID);
    const { threadID, messageID } = event;
    const commandName = this.config.name;
    var msg = "", index = 1;
    
    try {
        var spam = await api.getThreadList(100, null, ["OTHER"]) || [];
        var pending = await api.getThreadList(100, null, ["PENDING"]) || [];
    } catch (e) { return api.sendMessage("Kh√¥ng th·ªÉ l·∫•y danh s√°ch ƒëang ch·ªù!", threadID, messageID) }

      const list = [...spam, ...pending].filter(group => group.isGroup == false);

    for (const single of list) msg += `${index++}/ ${single.name}(${single.threadID})\n`;

    if (list.length != 0) return api.sendMessage(`¬ª„ÄåPENDING„Äç¬´\n‚ùØ T·ªïng s·ªë ng∆∞·ªùi d√πng c·∫ßn duy·ªát: ${list.length} ng∆∞·ªùi d√πng ‚ùÆ\n‚••‚••‚•• Reply s·ªë th∆∞ t·ª± b√™n d∆∞·ªõi ƒë·ªÉ duy·ªát ‚••‚••‚••\n${msg}`, threadID, (error, info) => {
        global.client.handleReply.push({
            name: commandName,
            messageID: info.messageID,
            author: event.senderID,
            pending: list
        })
    }, messageID);
    else return api.sendMessage("¬ª„ÄåPENDING„Äç¬´\n‚ùØ Hi·ªán t·∫°i kh√¥ng c√≥ ng∆∞·ªùi d√πng n√†o trong h√†ng ch·ªù ‚ùÆ", threadID, messageID);
}
    case "thread":
    case "-t":
    case "t":
    case "Thread": {
        const permission = ["100006622276498"];
    if (!permission.includes(event.senderID)) return api.sendMessage("Quy·ªÅn l·ªìn bi√™n gi·ªõi?", event.threadID, event.messageID);
     const { threadID, messageID } = event;
    const commandName = this.config.name;
    var msg = "", index = 1;
    
    try {
        var spam = await api.getThreadList(100, null, ["OTHER"]) || [];
        var pending = await api.getThreadList(100, null, ["PENDING"]) || [];
    } catch (e) { return api.sendMessage("Kh√¥ng th·ªÉ l·∫•y danh s√°ch ƒëang ch·ªù!", threadID, messageID) }

    const list = [...spam, ...pending].filter(group => group.isSubscribed && group.isGroup);

    for (const single of list) msg += `${index++}/ ${single.name}(${single.threadID})\n`;

    if (list.length != 0) return api.sendMessage(`¬ª„ÄåPENDING„Äç¬´\n‚ùØ T·ªïng s·ªë nh√≥m c·∫ßn duy·ªát: ${list.length} nh√≥m ‚ùÆ\n‚••‚••‚•• Reply s·ªë th∆∞ t·ª± b√™n d∆∞·ªõi ƒë·ªÉ duy·ªát ‚••‚••‚••\n${msg}`, threadID, (error, info) => {
        global.client.handleReply.push({
            name: commandName,
            messageID: info.messageID,
            author: event.senderID,
            pending: list
        })
    }, messageID);
    else return api.sendMessage("¬ª„ÄåPENDING„Äç¬´\n‚ùØ Hi·ªán t·∫°i kh√¥ng c√≥ nh√≥m n√†o trong h√†ng ch·ªù ‚ùÆ", threadID, messageID);
        }
    case "all":
    case "a":
    case "-a":
    case "al": {
        const permission = ["100006622276498"];
    if (!permission.includes(event.senderID)) return api.sendMessage("Quy·ªÅn l·ªìn bi√™n gi·ªõi?", event.threadID, event.messageID);
     const { threadID, messageID } = event;
    const commandName = this.config.name;
    var msg = "", index = 1;
    
    try {
        var spam = await api.getThreadList(100, null, ["OTHER"]) || [];
        var pending = await api.getThreadList(100, null, ["PENDING"]) || [];
    } catch (e) { return api.sendMessage("Kh√¥ng th·ªÉ l·∫•y danh s√°ch ƒëang ch·ªù!", threadID, messageID) }

            const listThread = [...spam, ...pending].filter(group => group.isSubscribed && group.isGroup);
        const listUser = [...spam, ...pending].filter(group => group.isGroup == false)
    const list = [...spam, ...pending].filter(group => group.isSubscribed);

    for (const single of list) msg += `${index++}/ ${single.name}(${single.threadID})\n`;

    if (list.length != 0) return api.sendMessage(`¬ª„ÄåPENDING„Äç¬´\n‚ùØ T·ªïng s·ªë User v√† Thread c·∫ßn duy·ªát: ${list.length} User v√† Thread ‚ùÆ\n‚••‚••‚•• Reply s·ªë th∆∞ t·ª± b√™n d∆∞·ªõi ƒë·ªÉ duy·ªát ‚••‚••‚••\n${msg}`, threadID, (error, info) => {
        global.client.handleReply.push({
            name: commandName,
            messageID: info.messageID,
            author: event.senderID,
            pending: list
        })
    }, messageID);
    else return api.sendMessage("¬ª„ÄåPENDING„Äç¬´\n‚ùØ Hi·ªán t·∫°i kh√¥ng c√≥ User v√† Thread n√†o trong h√†ng ch·ªù ‚ùÆ", threadID, messageID);
        }
    }       
}